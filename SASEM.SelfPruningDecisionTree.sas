*------------------------------------------------------------*;
* EM Version: 15.1;
* SAS Release: 9.04.01M6P110718;
* Host: odaws03-usw2.oda.sas.com;
* Project Path: ~;
* Project Name: MIS581FlightDelay;
* Diagram Id: EMWS1;
* Diagram Name: FlightDelayMay2020;
* Generated by: bionca.brown@csuglobal.edu;
* Date: 05JUN2020:15:03:42;
*------------------------------------------------------------*;
*------------------------------------------------------------*;
* Macro Variables;
*------------------------------------------------------------*;
%let EM_PROJECT =;
%let EM_PROJECTNAME =;
%let EM_WSNAME =;
%let EM_WSDESCRIPTION =FlightDelayMay2020;
%let EM_SUMMARY =WORK.SUMMARY;
%let EM_NUMTASKS =SINGLE;
%let EM_EDITMODE =R;
%let EM_DEBUGVAL =;
%let EM_ACTION =run report;
*------------------------------------------------------------*;
%macro em_usedatatable;
%if ^%symexist(EM_USEDATATABLE) %then %do;
%let EM_USEDATATABLE = Y;
%end;
%if "&EM_USEDATATABLE" ne "N" %then %do;
*------------------------------------------------------------*;
* Data Tables;
*------------------------------------------------------------*;
*------------------------------------------------------------*;
%end;
%mend em_usedatatable;
%em_usedatatable;
*------------------------------------------------------------*;
* Run Startup and Property Code;
*------------------------------------------------------------*;
%macro em_runstartupCode;
%if ^%symexist(EM_RUNSTARTUP) %then %do;
%let EM_RUNSTARTUP = Y;
%end;
%if "&EM_RUNSTARTUP" ne "N" %then %do;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"RUNSTARTUP.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
put '*------------------------------------------------------------* ;';
put '* Project Property Code';
put '*------------------------------------------------------------* ;';
put '%global EM_PMML;';
put '%let EM_PMML = N;';
put '%global EM_ASSESS;';
put '%let EM_ASSESS = Y;';
put '%global EM_GROUPASSESS;';
put '%let EM_GROUPASSESS = Y;';
put '%global HPDM_NODES;';
put '%let HPDM_NODES =;';
put '%global HPDM_NTHREADS;';
put '%let HPDM_NTHREADS =;';
put '%global EM_ADVISOR_MAXOBS;';
put '%let EM_ADVISOR_MAXOBS = 1000000;';
put '%global HPDM_COMMIT;';
put '%let HPDM_COMMIT =;';
put '%global EM_DECMETA_MAXLEVELS;';
put '%let EM_DECMETA_MAXLEVELS = 32;';
put '%global EM_NUMTASK;';
put '%let EM_NUMTASK = DEFAULT;';
put '%global EM_VIEW_BUFSIZE;';
put '%let EM_VIEW_BUFSIZE = 64;';
put '%global EM_EXPLOREOBS_MAX;';
put '%let EM_EXPLOREOBS_MAX = 150000;';
put '%global HPDM_SAMPLESIZE;';
put '%let HPDM_SAMPLESIZE = 10000;';
put '%global EM_MAXGROUPASSESS;';
put '%let EM_MAXGROUPASSESS =;';
put '%global EM_TRAIN_MAXLEVELS;';
put '%let EM_TRAIN_MAXLEVELS = 512;';
run;
%end;
%mend em_runstartupCode;
%em_runstartupCode;
*------------------------------------------------------------*;
* Create workspace data set;
*------------------------------------------------------------*;
data workspace;
length property $64 value $200;
property= 'PROJECTLOCATION';
value= "&EM_PROJECT";
output;
property= 'PROJECTNAME';
value= "&EM_PROJECTNAME";
output;
property= 'WORKSPACENAME';
value= "&EM_WSNAME";
output;
property= 'WORKSPACEDESCRIPTION';
value= "&EM_WSDESCRIPTION";
output;
property= 'SUMMARYDATASET';
value= "&EM_SUMMARY";
output;
property= 'NUMTASKS';
value= "&EM_NUMTASKS";
output;
property= 'EDITMODE';
value= "&EM_EDITMODE";
output;
property= 'DEBUG';
value= "&EM_DEBUGVAL";
output;
run;
*------------------------------------------------------------*;
* Create nodes data set;
*------------------------------------------------------------*;
data nodes;
length id $12 component $32 description $64 X 8 Y 8 diagramID $32 parentID $32;
id= "Tree";
component="DecisionTree";
description= "Decision Tree";
diagramID="_ROOT_";
parentID="";
X=745;
Y=155;
output;
id= "Stat";
component="StatExplore";
description= "StatExplore";
diagramID="_ROOT_";
parentID="";
X=221;
Y=65;
output;
id= "Repl";
component="Replace";
description= "Replacement";
diagramID="_ROOT_";
parentID="";
X=490;
Y=72;
output;
id= "Part";
component="Partition";
description= "Data Partition";
diagramID="_ROOT_";
parentID="";
X=364;
Y=65;
output;
id= "FIMPORT";
component="FileImport";
description= "File Import";
diagramID="_ROOT_";
parentID="";
X=79;
Y=65;
output;
id= "CNTRL";
component="ControlPoint";
description= "Control Point";
diagramID="_ROOT_";
parentID="";
X=456;
Y=137;
output;
run;
*------------------------------------------------------------*;
* Decmeta Data Set for Tree;
*------------------------------------------------------------*;
data WORK.Tree_DEP_DEL15_DM;
  length   _TYPE_                           $ 32
           VARIABLE                         $ 32
           LABEL                            $ 256
           LEVEL                            $ 32
           EVENT                            $ 32
           ORDER                            $ 10
           FORMAT                           $ 32
           TYPE                             $ 1
           COST                             $ 32
           USE                              $ 1
           ;

  label    _TYPE_="Type"
           VARIABLE="Variable"
           LABEL="Label"
           LEVEL="Measurement Level"
           EVENT="Target Event"
           ORDER="Order"
           FORMAT="Format"
           TYPE="Type"
           COST="Cost"
           USE="Use"
           ;
_TYPE_="MATRIX";
VARIABLE="";
LABEL="";
LEVEL="PROFIT";
EVENT="";
ORDER="";
FORMAT="";
TYPE="";
COST="";
USE="N";
output;
_TYPE_="TARGET";
VARIABLE="DEP_DEL15";
LABEL="";
LEVEL="BINARY";
EVENT="1";
ORDER="";
FORMAT="BEST12.0";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="DECISION";
VARIABLE="DECISION1";
LABEL="1";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="Y";
output;
_TYPE_="DECISION";
VARIABLE="DECISION2";
LABEL="0";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="Y";
output;
_TYPE_="DATAPRIOR";
VARIABLE="DATAPRIOR";
LABEL="Data Prior";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="N";
output;
_TYPE_="TRAINPRIOR";
VARIABLE="TRAINPRIOR";
LABEL="Training Prior";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="N";
output;
_TYPE_="DECPRIOR";
VARIABLE="DECPRIOR";
LABEL="Decision Prior";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="N";
output;
_TYPE_="PREDICTED";
VARIABLE="P_DEP_DEL151";
LABEL="Predicted: DEP_DEL15=1";
LEVEL="1";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="RESIDUAL";
VARIABLE="R_DEP_DEL151";
LABEL="Residual: DEP_DEL15=1";
LEVEL="1";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="PREDICTED";
VARIABLE="P_DEP_DEL150";
LABEL="Predicted: DEP_DEL15=0";
LEVEL="0";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="RESIDUAL";
VARIABLE="R_DEP_DEL150";
LABEL="Residual: DEP_DEL15=0";
LEVEL="0";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="FROM";
VARIABLE="F_DEP_DEL15";
LABEL="From: DEP_DEL15";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="C";
COST="";
USE="";
output;
_TYPE_="INTO";
VARIABLE="I_DEP_DEL15";
LABEL="Into: DEP_DEL15";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="C";
COST="";
USE="";
output;
;
run;
*------------------------------------------------------------*;
* Decdata Data Set for Tree;
*------------------------------------------------------------*;
data WORK.Tree_DEP_DEL15_DD(label="DEP_DEL15");
  length   DEP_DEL15                        $ 32
           COUNT                              8
           DATAPRIOR                          8
           TRAINPRIOR                         8
           DECPRIOR                           8
           DECISION1                          8
           DECISION2                          8
           ;

  label    COUNT="Level Counts"
           DATAPRIOR="Data Proportions"
           TRAINPRIOR="Training Proportions"
           DECPRIOR="Decision Priors"
           DECISION1="1"
           DECISION2="0"
           ;
DEP_DEL15="1";
COUNT=11176;
DATAPRIOR=0.16478428828403;
TRAINPRIOR=0.16478428828403;
DECPRIOR=.;
DECISION1=1;
DECISION2=0;
output;
DEP_DEL15="0";
COUNT=56646;
DATAPRIOR=0.83521571171596;
TRAINPRIOR=0.83521571171596;
DECPRIOR=.;
DECISION1=0;
DECISION2=1;
output;
;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for Tree;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Tree_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for Tree;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Tree_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* CROSSTAB Data Set for Stat;
*------------------------------------------------------------*;
*------------------------------------------------------------*;
* EMNOTES File for Stat;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Stat_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for Repl;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Repl_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
run;
*------------------------------------------------------------*;
* NEWVALUES Data Set for Repl;
*------------------------------------------------------------*;
data WORK.Repl_NEWVALUES;
  length   Name                             $ 32
           LEVEL                            $ 12
           TYPE                             $ 1
           REPLACE_VALUE                    $ 200
           ;

  label    Name="Variable"
           LEVEL="Formatted Value"
           TYPE="Type"
           REPLACE_VALUE="Replacement Value"
           ;
Name="DAY_OF_MONTH";
LEVEL="_UNKNOWN_";
TYPE="N";
REPLACE_VALUE="_DEFAULT_";
output;
Name="DAY_OF_WEEK";
LEVEL="_UNKNOWN_";
TYPE="N";
REPLACE_VALUE="_DEFAULT_";
output;
Name="DEP_DEL15";
LEVEL="_UNKNOWN_";
TYPE="N";
REPLACE_VALUE="_DEFAULT_";
output;
Name="DEST_STATE_ABR";
LEVEL="_UNKNOWN_";
TYPE="C";
REPLACE_VALUE="_DEFAULT_";
output;
Name="MONTH";
LEVEL="_UNKNOWN_";
TYPE="N";
REPLACE_VALUE="_DEFAULT_";
output;
;
run;
*------------------------------------------------------------*;
* EMNOTES File for Repl;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Repl_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for Part;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Part_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* Variable Attributes for FIMPORT;
*------------------------------------------------------------*;
data WORK.FIMPORT_VariableAttribute;
length Variable $64 AttributeName $32 AttributeValue $64;
Variable='ARR_DELAY';
AttributeName="ROLE";
AttributeValue='REJECTED';
Output;
Variable='ARR_TIME';
AttributeName="ROLE";
AttributeValue='REJECTED';
Output;
Variable='CARRIER_DELAY';
AttributeName="ROLE";
AttributeValue='REJECTED';
Output;
Variable='DAY_OF_MONTH';
AttributeName="LEVEL";
AttributeValue='NOMINAL';
Output;
Variable='DEP_DEL15';
AttributeName="ROLE";
AttributeValue='TARGET';
Output;
Variable='DEP_DELAY';
AttributeName="ROLE";
AttributeValue='REJECTED';
Output;
Variable='DEP_TIME';
AttributeName="ROLE";
AttributeValue='REJECTED';
Output;
Variable='DEST_STATE_ABR';
AttributeName="ROLE";
AttributeValue='INPUT';
Output;
Variable='FRSHTT';
AttributeName="ROLE";
AttributeValue='REJECTED';
Output;
Variable='LATE_AIRCRAFT_DELAY';
AttributeName="ROLE";
AttributeValue='REJECTED';
Output;
Variable='NAS_DELAY';
AttributeName="ROLE";
AttributeValue='REJECTED';
Output;
Variable='PRCP_ATTRIBUTES';
AttributeName="ROLE";
AttributeValue='REJECTED';
Output;
Variable='PRCP_ATTRIBUTES';
AttributeName="LEVEL";
AttributeValue='NOMINAL';
Output;
Variable='SECURITY_DELAY';
AttributeName="ROLE";
AttributeValue='REJECTED';
Output;
Variable='SECURITY_DELAY';
AttributeName="LEVEL";
AttributeValue='INTERVAL';
Output;
Variable='WEATHER_DELAY';
AttributeName="ROLE";
AttributeValue='REJECTED';
Output;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for FIMPORT;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"FIMPORT_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
run;
*------------------------------------------------------------*;
* VARIABLESETDELTA File for FIMPORT;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"FIMPORT_VARIABLESETDELTA.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
put 'if NAME="ARR_DELAY" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="INTERVAL";';
put 'ORDER="";';
put 'DROP="N";';
put 'end;';
put 'if NAME="ARR_TIME" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="INTERVAL";';
put 'ORDER="";';
put 'DROP="N";';
put 'end;';
put 'if NAME="CARRIER_DELAY" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="INTERVAL";';
put 'ORDER="";';
put 'DROP="N";';
put 'end;';
put 'if NAME="DAY_OF_MONTH" then do;';
put 'ROLE="INPUT";';
put 'LEVEL="NOMINAL";';
put 'ORDER="";';
put 'DROP="N";';
put 'end;';
put 'if NAME="DEP_DEL15" then do;';
put 'ROLE="TARGET";';
put 'LEVEL="BINARY";';
put 'ORDER="";';
put 'DROP="N";';
put 'end;';
put 'if NAME="DEP_DELAY" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="INTERVAL";';
put 'ORDER="";';
put 'DROP="N";';
put 'end;';
put 'if NAME="DEP_TIME" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="INTERVAL";';
put 'ORDER="";';
put 'DROP="N";';
put 'end;';
put 'if NAME="DEST_STATE_ABR" then do;';
put 'ROLE="INPUT";';
put 'LEVEL="NOMINAL";';
put 'ORDER="";';
put 'DROP="N";';
put 'end;';
put 'if NAME="FRSHTT" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="BINARY";';
put 'ORDER="";';
put 'DROP="N";';
put 'end;';
put 'if NAME="LATE_AIRCRAFT_DELAY" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="INTERVAL";';
put 'ORDER="";';
put 'DROP="N";';
put 'end;';
put 'if NAME="NAS_DELAY" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="INTERVAL";';
put 'ORDER="";';
put 'DROP="N";';
put 'end;';
put 'if NAME="PRCP_ATTRIBUTES" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="NOMINAL";';
put 'ORDER="";';
put 'DROP="N";';
put 'end;';
put 'if NAME="SECURITY_DELAY" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="INTERVAL";';
put 'ORDER="";';
put 'DROP="N";';
put 'end;';
put 'if NAME="WEATHER_DELAY" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="INTERVAL";';
put 'ORDER="";';
put 'DROP="N";';
put 'end;';
run;
*------------------------------------------------------------*;
* DELTACODE File for FIMPORT;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"FIMPORT_DELTACODE.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
put 'if NAME="ARR_DELAY" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="INTERVAL";';
put 'ORDER="";';
put 'end;';
put 'if NAME="ARR_TIME" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="INTERVAL";';
put 'ORDER="";';
put 'end;';
put 'if NAME="CARRIER_DELAY" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="INTERVAL";';
put 'ORDER="";';
put 'end;';
put 'if NAME="DAY_OF_MONTH" then do;';
put 'ROLE="INPUT";';
put 'LEVEL="NOMINAL";';
put 'ORDER="";';
put 'end;';
put 'if NAME="DEP_DEL15" then do;';
put 'ROLE="TARGET";';
put 'LEVEL="BINARY";';
put 'ORDER="";';
put 'end;';
put 'if NAME="DEP_DELAY" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="INTERVAL";';
put 'ORDER="";';
put 'end;';
put 'if NAME="DEP_TIME" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="INTERVAL";';
put 'ORDER="";';
put 'end;';
put 'if NAME="DEST_STATE_ABR" then do;';
put 'ROLE="INPUT";';
put 'LEVEL="NOMINAL";';
put 'ORDER="";';
put 'end;';
put 'if NAME="FRSHTT" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="BINARY";';
put 'ORDER="";';
put 'end;';
put 'if NAME="LATE_AIRCRAFT_DELAY" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="INTERVAL";';
put 'ORDER="";';
put 'end;';
put 'if NAME="NAS_DELAY" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="INTERVAL";';
put 'ORDER="";';
put 'end;';
put 'if NAME="PRCP_ATTRIBUTES" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="NOMINAL";';
put 'ORDER="";';
put 'end;';
put 'if NAME="SECURITY_DELAY" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="INTERVAL";';
put 'ORDER="";';
put 'end;';
put 'if NAME="WEATHER_DELAY" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="INTERVAL";';
put 'ORDER="";';
put 'end;';
put 'drop DROP;';
run;
*------------------------------------------------------------*;
* EMNOTES File for FIMPORT;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"FIMPORT_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* Create node properties data set;
*------------------------------------------------------------*;
data nodeprops;
length id $12 property $64 value $400;
id= "Tree";
property="Location";
value= "CATALOG";
output;
id= "Tree";
property="Catalog";
value= "SASHELP.EMMODL.TREE.SOURCE";
output;
id= "Tree";
property="ToolType";
value= "MODEL";
output;
id= "Tree";
property="TrainMode";
value= "BATCH";
output;
id= "Tree";
property="ImportModel";
value= "N";
output;
id= "Tree";
property="Freeze";
value= "N";
output;
id= "Tree";
property="UseMultipleTarget";
value= "N";
output;
id= "Tree";
property="Precision";
value= "4";
output;
id= "Tree";
property="IntervalCriterion";
value= "PROBF";
output;
id= "Tree";
property="NominalCriterion";
value= "PROBCHISQ";
output;
id= "Tree";
property="OrdinalCriterion";
value= "ENTROPY";
output;
id= "Tree";
property="SigLevel";
value= "0.2";
output;
id= "Tree";
property="Splitsize";
value= ".";
output;
id= "Tree";
property="LeafSize";
value= "8";
output;
id= "Tree";
property="MinCatSize";
value= "5";
output;
id= "Tree";
property="Maxbranch";
value= "2";
output;
id= "Tree";
property="Maxdepth";
value= "10";
output;
id= "Tree";
property="Nrules";
value= "5";
output;
id= "Tree";
property="Nsurrs";
value= "4";
output;
id= "Tree";
property="MissingValue";
value= "USEINSEARCH";
output;
id= "Tree";
property="UseVarOnce";
value= "N";
output;
id= "Tree";
property="SplitPrecision";
value= "4";
output;
id= "Tree";
property="Subtree";
value= "ASSESSMENT";
output;
id= "Tree";
property="NSubtree";
value= "1";
output;
id= "Tree";
property="AssessMeasure";
value= "PROFIT/LOSS";
output;
id= "Tree";
property="AssessPercentage";
value= "0.25";
output;
id= "Tree";
property="NodeSample";
value= "20000";
output;
id= "Tree";
property="Exhaustive";
value= "5000";
output;
id= "Tree";
property="Kass";
value= "Y";
output;
id= "Tree";
property="KassApply";
value= "BEFORE";
output;
id= "Tree";
property="Depth";
value= "Y";
output;
id= "Tree";
property="Inputs";
value= "N";
output;
id= "Tree";
property="NumInputs";
value= "1";
output;
id= "Tree";
property="VarSelection";
value= "Y";
output;
id= "Tree";
property="Leafid";
value= "Y";
output;
id= "Tree";
property="NodeRole";
value= "SEGMENT";
output;
id= "Tree";
property="Performance";
value= "DISK";
output;
id= "Tree";
property="CV";
value= "N";
output;
id= "Tree";
property="CVNIter";
value= "10";
output;
id= "Tree";
property="CVRepeat";
value= "1";
output;
id= "Tree";
property="CVSeed";
value= "12345";
output;
id= "Tree";
property="ObsImportance";
value= "N";
output;
id= "Tree";
property="NumSingleImp";
value= "5";
output;
id= "Tree";
property="UseDecision";
value= "N";
output;
id= "Tree";
property="UsePriors";
value= "N";
output;
id= "Tree";
property="ClassColorBy";
value= "PERCENTCORRECT";
output;
id= "Tree";
property="IntColorBy";
value= "AVG";
output;
id= "Tree";
property="ShowNodeId";
value= "Y";
output;
id= "Tree";
property="ShowValid";
value= "Y";
output;
id= "Tree";
property="Pred";
value= "N";
output;
id= "Tree";
property="Target";
value= "ALL";
output;
id= "Tree";
property="Count";
value= "Y";
output;
id= "Tree";
property="ProfitLoss";
value= "NONE";
output;
id= "Tree";
property="PercentCorrect";
value= "N";
output;
id= "Tree";
property="AVG";
value= "Y";
output;
id= "Tree";
property="RASE";
value= "N";
output;
id= "Tree";
property="CreateSample";
value= "DEFAULT";
output;
id= "Tree";
property="SampleMethod";
value= "RANDOM";
output;
id= "Tree";
property="SampleSize";
value= "10000";
output;
id= "Tree";
property="SampleSeed";
value= "12345";
output;
id= "Tree";
property="ForceRun";
value= "N";
output;
id= "Tree";
property="RunAction";
value= "Train";
output;
id= "Tree";
property="Component";
value= "DecisionTree";
output;
id= "Tree";
property="Criterion";
value= "DEFAULT";
output;
id= "Tree";
property="Dummy";
value= "N";
output;
id= "Tree";
property="Predict";
value= "Y";
output;
id= "Tree";
property="ImportedTreeData";
value= "";
output;
id= "Tree";
property="ToolPrefix";
value= "Tree";
output;
id= "Tree";
property="EM_DECMETA_DEP_DEL15";
value= "WORK.Tree_DEP_DEL15_DM";
output;
id= "Tree";
property="EM_DECDATA_DEP_DEL15";
value= "WORK.Tree_DEP_DEL15_DD";
output;
id= "Tree";
property="EM_FILE_USERTRAINCODE";
value= "Tree_USERTRAINCODE.sas";
output;
id= "Tree";
property="EM_FILE_EMNOTES";
value= "Tree_EMNOTES.txt";
output;
id= "Stat";
property="BySegment";
value= "N";
output;
id= "Stat";
property="Correlation";
value= "Y";
output;
id= "Stat";
property="Spearman";
value= "N";
output;
id= "Stat";
property="Pearson";
value= "Y";
output;
id= "Stat";
property="ChiSquare";
value= "Y";
output;
id= "Stat";
property="ChiSquareInterval";
value= "Y";
output;
id= "Stat";
property="ChiSquareIntervalNBins";
value= "5";
output;
id= "Stat";
property="MaximumVars";
value= "1000";
output;
id= "Stat";
property="HideVariable";
value= "Y";
output;
id= "Stat";
property="DropRejected";
value= "Y";
output;
id= "Stat";
property="UseValidate";
value= "N";
output;
id= "Stat";
property="UseTest";
value= "N";
output;
id= "Stat";
property="UseScore";
value= "N";
output;
id= "Stat";
property="NObs";
value= "100000";
output;
id= "Stat";
property="IntervalDistribution";
value= "Y";
output;
id= "Stat";
property="ClassDistribution";
value= "Y";
output;
id= "Stat";
property="LevelSummary";
value= "Y";
output;
id= "Stat";
property="ForceRun";
value= "N";
output;
id= "Stat";
property="RunAction";
value= "Train";
output;
id= "Stat";
property="Component";
value= "StatExplore";
output;
id= "Stat";
property="EM_FILE_EMNOTES";
value= "Stat_EMNOTES.txt";
output;
id= "Repl";
property="Location";
value= "CATALOG";
output;
id= "Repl";
property="Catalog";
value= "SASHELP.EMMDFY.REPLACE.SOURCE";
output;
id= "Repl";
property="HideVariable";
value= "N";
output;
id= "Repl";
property="UnknownLevel";
value= "NONE";
output;
id= "Repl";
property="ReplaceMethod";
value= "COMPUTED";
output;
id= "Repl";
property="CalcMethod";
value= "NONE";
output;
id= "Repl";
property="MADSCutoff";
value= "9.0";
output;
id= "Repl";
property="SpacingsCutoff";
value= "9.0";
output;
id= "Repl";
property="StddevCutoff";
value= "3.0";
output;
id= "Repl";
property="PercentsCutoff";
value= "0.5";
output;
id= "Repl";
property="CountReport";
value= "Y";
output;
id= "Repl";
property="ForceRun";
value= "N";
output;
id= "Repl";
property="RunAction";
value= "Train";
output;
id= "Repl";
property="Component";
value= "Replace";
output;
id= "Repl";
property="IntervalMethod";
value= "NONE";
output;
id= "Repl";
property="DataNeeded";
value= "Y";
output;
id= "Repl";
property="ToolType";
value= "MODIFY";
output;
id= "Repl";
property="ToolPrefix";
value= "Repl";
output;
id= "Repl";
property="EM_FILE_USERTRAINCODE";
value= "Repl_USERTRAINCODE.sas";
output;
id= "Repl";
property="EM_DATA_NEWVALUES";
value= "WORK.Repl_NEWVALUES";
output;
id= "Repl";
property="EM_FILE_EMNOTES";
value= "Repl_EMNOTES.txt";
output;
id= "Part";
property="Method";
value= "DEFAULT";
output;
id= "Part";
property="TrainPct";
value= "50";
output;
id= "Part";
property="ValidatePct";
value= "50";
output;
id= "Part";
property="TestPct";
value= "0";
output;
id= "Part";
property="RandomSeed";
value= "12345";
output;
id= "Part";
property="OutputType";
value= "DATA";
output;
id= "Part";
property="IntervalDistribution";
value= "Y";
output;
id= "Part";
property="ClassDistribution";
value= "Y";
output;
id= "Part";
property="ForceRun";
value= "N";
output;
id= "Part";
property="RunAction";
value= "Train";
output;
id= "Part";
property="Component";
value= "Partition";
output;
id= "Part";
property="EM_FILE_EMNOTES";
value= "Part_EMNOTES.txt";
output;
id= "FIMPORT";
property="Location";
value= "CATALOG";
output;
id= "FIMPORT";
property="Catalog";
value= "SASHELP.EMSAMP.Fimport.SOURCE";
output;
id= "FIMPORT";
property="ImportType";
value= "Local";
output;
id= "FIMPORT";
property="GuessRows";
value= "500";
output;
id= "FIMPORT";
property="Delimiter";
value= ",";
output;
id= "FIMPORT";
property="NameRow";
value= "Y";
output;
id= "FIMPORT";
property="SkipRows";
value= "0";
output;
id= "FIMPORT";
property="MaxRows";
value= "1000000";
output;
id= "FIMPORT";
property="MaxCols";
value= "10000";
output;
id= "FIMPORT";
property="FileType";
value= "csv";
output;
id= "FIMPORT";
property="Role";
value= "TRAIN";
output;
id= "FIMPORT";
property="ForceRun";
value= "N";
output;
id= "FIMPORT";
property="Summarize";
value= "N";
output;
id= "FIMPORT";
property="AdvancedAdvisor";
value= "Y";
output;
id= "FIMPORT";
property="RunAction";
value= "Train";
output;
id= "FIMPORT";
property="Component";
value= "FileImport";
output;
id= "FIMPORT";
property="IFileName";
value= "C:\Users\Bionca\Documents\FinalFlight.2020501.csv";
output;
id= "FIMPORT";
property="AccessTable";
value= "NoTableName";
output;
id= "FIMPORT";
property="UserID";
value= "NoUserID";
output;
id= "FIMPORT";
property="Password";
value= "NoPassword";
output;
id= "FIMPORT";
property="ToolType";
value= "SAMPLE";
output;
id= "FIMPORT";
property="ToolPrefix";
value= "FIMPORT";
output;
id= "FIMPORT";
property="EM_VARIABLEATTRIBUTES";
value= "WORK.FIMPORT_VariableAttribute";
output;
id= "FIMPORT";
property="EM_FILE_USERTRAINCODE";
value= "FIMPORT_USERTRAINCODE.sas";
output;
id= "FIMPORT";
property="EM_FILE_VARIABLESETDELTA";
value= "FIMPORT_VARIABLESETDELTA.txt";
output;
id= "FIMPORT";
property="EM_FILE_DELTACODE";
value= "FIMPORT_DELTACODE.txt";
output;
id= "FIMPORT";
property="EM_FILE_EMNOTES";
value= "FIMPORT_EMNOTES.txt";
output;
run;
*------------------------------------------------------------*;
* Create connections data set;
*------------------------------------------------------------*;
data connect;
length from to $12;
from="CNTRL";
to="Tree";
output;
from="Repl";
to="CNTRL";
output;
from="Part";
to="Repl";
output;
from="Stat";
to="Part";
output;
from="FIMPORT";
to="Stat";
output;
run;
*------------------------------------------------------------*;
* Create actions to run data set;
*------------------------------------------------------------*;
%macro emaction;
%let actionstring = %upcase(&EM_ACTION);
%if %index(&actionstring, RUN) or %index(&actionstring, REPORT) %then %do;
data actions;
length id $12 action $40;
id="Tree";
%if %index(&actionstring, RUN) %then %do;
action='run';
output;
%end;
%if %index(&actionstring, REPORT) %then %do;
action='report';
output;
%end;
run;
%end;
%mend;
%emaction;
*------------------------------------------------------------*;
* Execute the actions;
*------------------------------------------------------------*;
%em5batch(execute, workspace=workspace, nodes=nodes, connect=connect, datasources=datasources, nodeprops=nodeprops, action=actions);
